{"version":3,"sources":["components/Phonebook/ContactForm/ContactForm.js","components/Phonebook/Filter/Filter.js","components/Phonebook/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","number","inputChange","e","currentTarget","value","setState","inputSubmit","preventDefault","props","onSubmit","reset","this","nameId","shortid","generate","numberId","className","htmlFor","type","id","onChange","pattern","title","required","Component","Filter","ContactList","contacts","onDelete","map","el","onClick","App","filter","formSubmitHandler","data","prevState","a","toLowerCase","length","unshift","alert","deleteName","index","findIndex","splice","changeFilter","normalizedText","visibleContacts","text","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42d03cfa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nclass ContactForm extends Component {\r\n\tstate = {\r\n\t\tname: '',\r\n\t\tnumber: '',\r\n\t};\r\n\tinputChange = e => {\r\n\t\tconst { name, value } = e.currentTarget;\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\tinputSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.onSubmit(this.state);\r\n\t\tthis.reset();\r\n\t};\r\n\treset = () => {\r\n\t\tthis.setState({\r\n\t\t\tname: '',\r\n\t\t\tnumber: '',\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\tconst { name, number } = this.state;\r\n\t\tlet nameId = shortid.generate(),\r\n\t\t\tnumberId = shortid.generate();\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<h1 className=\"header\">phonebook</h1>\r\n\t\t\t\t<form className=\"form\" onSubmit={this.inputSubmit}>\r\n\t\t\t\t\t<label htmlFor={nameId} className=\"form__label\">\r\n\t\t\t\t\t\tname\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tclassName=\"form__input\"\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tid={nameId}\r\n\t\t\t\t\t\tonChange={this.inputChange}\r\n\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n\t\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor={numberId} className=\"form__label\">\r\n\t\t\t\t\t\tnumber\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\tname=\"number\"\r\n\t\t\t\t\t\tvalue={number}\r\n\t\t\t\t\t\tid={numberId}\r\n\t\t\t\t\t\tonChange={this.inputChange}\r\n\t\t\t\t\t\tclassName=\"form__input\"\r\n\t\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n\t\t\t\t\t\ttitle=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input type=\"submit\" value=\"Add contact\" />\r\n\t\t\t\t</form>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>Find contacts by name</p>\r\n\t\t\t<input type=\"text\" value={value} onChange={onChange} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nFilter.propTypes = {\r\n\tvalue: PropTypes.string.isRequired,\r\n\tonChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2 className=\"header\">contacts</h2>\r\n\t\t\t<ul className=\"contacts\">\r\n\t\t\t\t{contacts.map(el => (\r\n\t\t\t\t\t<li key={el.id}>\r\n\t\t\t\t\t\t<p className=\"contacts__name\">\r\n\t\t\t\t\t\t\t{el.name}: {el.number}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<button onClick={() => onDelete(el.id)}>Delete</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nContactList.propTypes = {\r\n\tcontacts: PropTypes.array.isRequired,\r\n\tonDelete: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ContactList;\r\n","import 'modern-normalize/modern-normalize.css';\nimport './components/Phonebook/Phonebook.scss';\nimport './App.css';\nimport ContactForm from './components/Phonebook/ContactForm/';\nimport Filter from './components/Phonebook/Filter/';\nimport ContactList from './components/Phonebook/ContactList/';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nclass App extends Component {\n\tstate = {\n\t\tcontacts: [],\n\t\tfilter: '',\n\t};\n\tformSubmitHandler = data => {\n\t\tthis.setState(prevState => {\n\t\t\tif (prevState.contacts.filter(a => a.name.toLowerCase() === data.name.toLowerCase()).length !== 0) {\n\t\t\t\talert(`${data.name} is already in contacts.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn prevState.contacts.unshift({\n\t\t\t\tid: shortid.generate(),\n\t\t\t\tname: data.name,\n\t\t\t\tnumber: data.number,\n\t\t\t});\n\t\t});\n\t};\n\tdeleteName = id => {\n\t\tthis.setState(prevState => {\n\t\t\tlet index = prevState.contacts.findIndex(a => a.id === id);\n\t\t\tif (index !== -1) return prevState.contacts.splice(index, 1);\n\t\t});\n\t};\n\tchangeFilter = e => {\n\t\tthis.setState({filter: e.currentTarget.value});\n\t}\n\trender() {\n\t\tconst { contacts, filter } = this.state;\n\t\tconst normalizedText = filter.toLowerCase();\n\t\tconst visibleContacts = contacts.filter(text => text.name.toLowerCase().includes(normalizedText));\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<ContactForm onSubmit={this.formSubmitHandler} />\n\t\t\t\t<Filter value={filter} onChange={this.changeFilter} />\n\t\t\t\t<ContactList contacts={visibleContacts} onDelete={this.deleteName} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}